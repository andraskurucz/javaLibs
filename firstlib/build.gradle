apply from: 'versionCodes.gradle'

buildscript {

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.6.0'
    }
}

allprojects {
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'maven-publish'

    repositories {
        google()
        jcenter()
    }
}

artifactoryPublish.skip = true

project('date') {
    artifactoryPublish.dependsOn('build')
    publishing {
        publications {
            aar(MavenPublication) {
                groupId = group
                artifactId = project.getName()
                version = buildVersionNumber()
                // Tell maven to prepare the generated "*.aar" file for publishing
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            }
        }
    }

    artifactoryPublish {
        publications(publishing.publications.aar)
    }
}

// Jenkins exposes the build number to Gradle in the an environment variable.
// For local builds we put 'SNAPSHOT' as a version indentifier and
// for artifactory uploads from the buildserver, we use the BUILD NUMBER.
String buildVersionNumber() {
    def versionSuffix = 'SNAPSHOT'
    if (System.env.BUILD_NUMBER) {
        versionSuffix = System.env.BUILD_NUMBER
    }
    return libsConfig.versionName + '-' + versionSuffix
}

artifactory {
    clientConfig.setIncludeEnvVars(true)
    clientConfig.info.addEnvironmentProperty('test.adding.dynVar', new Date().toString())

    contextUrl = 'http://localhost:8081/artifactory'
    publish {
        repository {
            repoKey = 'libs-snapshot-local' // The Artifactory repository key to publish to
            username = "${artifactory_user}" // The publisher user name
            password = "${artifactory_password}" // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publishArtifacts = true
            publishPom = true // Publish generated POM files to Artifactory (true by default)
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
